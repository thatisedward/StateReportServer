// **********************************************************************
// This file was generated by a TAF parser!
// TAF version 2.0.0 by WSRD Tencent.
// Generated from `BdbComm.jce'
// **********************************************************************

package bdb

import "reflect"
import "tars/protocol/serializer"

type BdbFieldValue struct {
	EOper int
	Field BdbField
}

func (_obj *BdbFieldValue) resetDefault() {
}

func (_obj *BdbFieldValue) WriteTo(_os serializer.JceOutputStream) error {
	var _err error
	if _err = _os.Write(reflect.ValueOf(&_obj.EOper), 1); _err != nil {
		return _err
	}
	if _err = _os.Write(reflect.ValueOf(&_obj.Field), 2); _err != nil {
		return _err
	}
	return nil
}

func (_obj *BdbFieldValue) ReadFrom(_is serializer.JceInputStream) error {
	var _err error
	var _i interface{}
	_obj.resetDefault()
	_i, _err = _is.Read(reflect.TypeOf(_obj.EOper), 1, true)
	if _err != nil {
		return _err
	}
	if _i != nil {
		_obj.EOper = _i.(int)
	}
	_i, _err = _is.Read(reflect.TypeOf(_obj.Field), 2, true)
	if _err != nil {
		return _err
	}
	if _i != nil {
		_obj.Field = _i.(BdbField)
	}
	return nil
}

func (_obj *BdbFieldValue) Display(_ds serializer.JceDisplayer) {
	_ds.Display(reflect.ValueOf(&_obj.EOper), "eOper")
	_ds.Display(reflect.ValueOf(&_obj.Field), "field")
}

func (_obj *BdbFieldValue) WriteJson(_en serializer.JceJsonEncoder) ([]byte, error) {
	var _err error
	_err = _en.EncodeJSON(reflect.ValueOf(&_obj.EOper), "eOper")
	if _err != nil {
		return nil, _err
	}
	_err = _en.EncodeJSON(reflect.ValueOf(&_obj.Field), "field")
	if _err != nil {
		return nil, _err
	}
	return _en.ToBytes(), nil
}

func (_obj *BdbFieldValue) ReadJson(_de serializer.JceJsonDecoder) error {
	return _de.DecodeJSON(reflect.ValueOf(_obj))
}
